// Code AutoGenerated; DO NOT EDIT.

package methods

import (
	"encoding/json"
	"github.com/Squirrel-Network/gobotapi/types"
	rawTypes "github.com/Squirrel-Network/gobotapi/types/raw"
)

// PromoteChatMember Use this method to promote or demote a user in a supergroup or a channel
// The bot must be an administrator in the chat for this to work and must have the appropriate administrator rights
// Pass False for all boolean parameters to demote a user
// Returns True on success.
type PromoteChatMember struct {
	CanChangeInfo       bool  `json:"can_change_info,omitempty"`
	CanDeleteMessages   bool  `json:"can_delete_messages,omitempty"`
	CanEditMessages     bool  `json:"can_edit_messages,omitempty"`
	CanInviteUsers      bool  `json:"can_invite_users,omitempty"`
	CanManageChat       bool  `json:"can_manage_chat,omitempty"`
	CanManageVideoChats bool  `json:"can_manage_video_chats,omitempty"`
	CanPinMessages      bool  `json:"can_pin_messages,omitempty"`
	CanPostMessages     bool  `json:"can_post_messages,omitempty"`
	CanPromoteMembers   bool  `json:"can_promote_members,omitempty"`
	CanRestrictMembers  bool  `json:"can_restrict_members,omitempty"`
	ChatID              int64 `json:"chat_id"`
	IsAnonymous         bool  `json:"is_anonymous,omitempty"`
	UserID              int64 `json:"user_id"`
}

func (entity *PromoteChatMember) ProgressCallable() rawTypes.ProgressCallable {
	return nil
}

func (entity *PromoteChatMember) Files() map[string]rawTypes.InputFile {
	return map[string]rawTypes.InputFile{}
}

func (PromoteChatMember) MethodName() string {
	return "promoteChatMember"
}

func (PromoteChatMember) ParseResult(response []byte) (*rawTypes.Result, error) {
	var x1 struct {
		Result bool `json:"result"`
	}
	err := json.Unmarshal(response, &x1)
	if err != nil {
		return nil, err
	}
	result := rawTypes.Result{
		Kind:   types.TypeBoolean,
		Result: x1.Result,
	}
	return &result, nil
}
